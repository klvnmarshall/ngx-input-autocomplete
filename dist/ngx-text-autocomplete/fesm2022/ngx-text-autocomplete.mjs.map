{"version":3,"file":"ngx-text-autocomplete.mjs","sources":["../../../projects/ngx-text-autocomplete/src/lib/ngx-text-autocomplete-menu.component.ts","../../../projects/ngx-text-autocomplete/src/lib/ngx-text-autocomplete.directive.ts","../../../projects/ngx-text-autocomplete/src/lib/ngx-text-autocomplete.component.ts","../../../projects/ngx-text-autocomplete/src/public-api.ts","../../../projects/ngx-text-autocomplete/src/ngx-text-autocomplete.ts"],"sourcesContent":["import {Component, ElementRef, HostListener, ViewChild} from '@angular/core';\nimport {Subject} from \"rxjs\";\n\n@Component({\n  selector: 'ngx-text-autocomplete-menu',\n  standalone: true,\n  imports: [],\n  template: `\n\n    @if (choices.length) {\n      <ul\n        #dropdownMenu\n        class=\"dropdown-menu\"\n        [style.top.px]=\"position?.top\"\n        [style.left.px]=\"position?.left\">\n\n        @for (choice of choices; track choice) {\n          <li class=\"dropdown-item\"\n              [class.active]=\"activeChoice === choice\"\n              (click)=\"selectChoice.next(choice)\">\n            <a>\n              {{ choice }}\n            </a>\n          </li>\n        }\n      </ul>\n    }\n\n  `,\n  styles: `\n    .dropdown-menu {\n      display: block;\n      max-height: 400px;\n      overflow-y: auto;\n    }\n\n    .dropdown-item:hover {\n      cursor: pointer;\n    }\n  `\n})\nexport class NgxTextAutocompleteMenuComponent {\n  @ViewChild('dropdownMenu') dropdownMenuElement?: ElementRef<HTMLUListElement>;\n  position: { top: number; left: number } | undefined\n  selectChoice = new Subject<string>();\n  activeChoice = ''\n  searchText = '';\n  choiceLoadError?: string\n  choiceLoading = false;\n\n  private _choices: string[] = [];\n  set choices(choices: string[]) {\n    this._choices = choices;\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  trackById = (index: number, choice: any) =>\n    choice.id !== undefined ? choice.id : choice;\n\n  @HostListener('document:keydown.ArrowDown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index + 1]) {\n      this.scrollToChoice(index + 1);\n    }\n  }\n\n  @HostListener('document:keydown.ArrowUp', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index - 1]) {\n      this.scrollToChoice(index - 1);\n    }\n  }\n\n  @HostListener('document:keydown.Enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    if (this.choices.indexOf(this.activeChoice) > -1) {\n      event.preventDefault();\n      this.selectChoice.next(this.activeChoice);\n    }\n  }\n\n  private scrollToChoice(index: number) {\n    this.activeChoice = this._choices[index];\n\n    if (this.dropdownMenuElement) {\n      const ulPosition = this.dropdownMenuElement.nativeElement.getBoundingClientRect();\n      const li = this.dropdownMenuElement.nativeElement.children[index];\n      const liPosition = li.getBoundingClientRect();\n\n      if (\n        liPosition.top < ulPosition.top ||\n        liPosition.bottom > ulPosition.bottom\n      ) {\n        li.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest'\n        });\n      }\n    }\n  }\n}\n","import {\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport {NgxTextAutocompleteMenuComponent} from \"./ngx-text-autocomplete-menu.component\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport toPX from 'to-px';\nimport getCaretCoordinates from 'textarea-caret';\n\nexport interface ChoiceSelectedEvent {\n  choice: string;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'textarea[NgxTextAutocomplete], input[type=\"text\"][NgxTextAutocomplete]',\n  standalone: true\n})\nexport class NgxTextAutocompleteDirective implements OnDestroy {\n\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * An optional keyboard shortcut that will trigger the menu to appear\n   */\n  @Input() keyboardShortcut?: (event: KeyboardEvent) => boolean;\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * Whether to close the menu when the host textarea loses focus\n   */\n  @Input() closeMenuOnBlur = false;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = NgxTextAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter<ChoiceSelectedEvent>();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => string[] | Promise<string[]> = () => [];\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: string) => string = choice => choice;\n\n  private menu:\n    | {\n    component: ComponentRef<NgxTextAutocompleteMenuComponent>;\n    triggerCharacterPosition: number;\n    lastCaretPosition?: number;\n  }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  private usingShortcut = false;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private elm: ElementRef\n  ) {\n  }\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.usingShortcut = false;\n      this.showMenu();\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (this.keyboardShortcut && this.keyboardShortcut(event)) {\n      this.usingShortcut = true;\n      this.showMenu();\n      this.onChange('');\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (!this.menu) {\n      return\n    }\n\n    if (\n      value[this.menu.triggerCharacterPosition] !== this.triggerCharacter &&\n      !this.usingShortcut\n    ) {\n      this.hideMenu();\n    } else {\n      const cursor = this.elm.nativeElement.selectionStart;\n      if (cursor < this.menu.triggerCharacterPosition) {\n        this.hideMenu();\n      } else {\n        if (this.usingShortcut && !this.menu) {\n          value = this.triggerCharacter;\n        }\n        const offset = this.usingShortcut ? 0 : 1;\n        const searchText = value.slice(\n          this.menu.triggerCharacterPosition + offset,\n          cursor\n        );\n\n        if (!searchText.match(this.searchRegexp)) {\n          this.hideMenu();\n        } else {\n          this.menu.component.instance.searchText = searchText;\n          this.menu.component.instance.choices = [];\n          this.menu.component.instance.choiceLoadError = undefined;\n          this.menu.component.instance.choiceLoading = true;\n          this.menu.component.changeDetectorRef.detectChanges();\n          Promise.resolve(this.findChoices(searchText))\n            .then(choices => {\n              if (this.menu) {\n                this.menu.component.instance.choices = choices;\n                this.menu.component.instance.choiceLoading = false;\n                this.menu.component.changeDetectorRef.detectChanges();\n              }\n            })\n            .catch(err => {\n              if (this.menu) {\n                this.menu.component.instance.choiceLoading = false;\n                this.menu.component.instance.choiceLoadError = err;\n                this.menu.component.changeDetectorRef.detectChanges();\n              }\n            });\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n\n      if (this.closeMenuOnBlur) {\n        this.hideMenu();\n      }\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      this.menu = {\n        component: this.viewContainerRef.createComponent(this.menuComponent),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n\n      const lineHeight = this.getLineHeight(this.elm.nativeElement);\n      const {top, left} = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  getLineHeight(elm: HTMLElement): number {\n    const lineHeightStr = getComputedStyle(elm).lineHeight;\n    const fontSizeStr = getComputedStyle(elm).fontSize;\n    const fontSize = toPX(fontSizeStr) ?? 16;\n    const normal = 1.2;\n    const lineHeightNum = parseFloat(lineHeightStr);\n\n    if (lineHeightStr === lineHeightNum + '') {\n      return fontSize * lineHeightNum;\n    }\n\n    if (lineHeightStr.toLowerCase() === 'normal') {\n      return fontSize * normal;\n    }\n\n    return toPX(lineHeightStr) ?? 16;\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next(null);\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-text-autocomplete',\n  standalone: true,\n  imports: [],\n  template: '<ng-content></ng-content>',\n  styles: `\n    :host {\n      position: relative;\n      display: block;\n    }\n  `\n})\nexport class NgxTextAutocompleteComponent {\n\n}\n","/*\n * Public API Surface of ngx-text-autocomplete\n */\n\nexport * from './lib/ngx-text-autocomplete.directive';\nexport * from './lib/ngx-text-autocomplete.component';\nexport * from './lib/ngx-text-autocomplete-menu.component';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}